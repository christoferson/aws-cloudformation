AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 - Basic HTTP Server

Metadata:

  StackVersion: 1

  AWS::CloudFormation::Interface:

    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcEc2Subnet

      -
        Label:
          default: "Instance Configuration"
        Parameters:
          - Ec2ImageId
          - Ec2InstanceType

Parameters:

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  VpcEc2Subnet:
    Description: EC2 subnet
    Type: AWS::EC2::Subnet::Id

  Ec2ImageId:
    Description: EC2 AMI ID
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  Ec2InstanceType:
    Description: EC2 InstanceType
    Type: String
    Default: t2.micro

Resources:

  Ec2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
      Policies: !Ref 'AWS::NoValue'
      RoleName: !Ref 'AWS::NoValue'

  Ec2RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Ec2RolePolicies
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          Resource:
          - arn:aws:logs:*:*:*
      Roles:
      - !Ref 'Ec2IAMRole'

  Ec2IAMProfile:
    Type: AWS::IAM::InstanceProfile
    #DependsOn: Ec2IAMRole
    Properties:
      Path: /
      Roles:
      - !Ref Ec2IAMRole


  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: allow ICMP via same VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"


  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref Ec2ImageId
      InstanceType: !Ref Ec2InstanceType
      #KeyName: !Ref Ec2InstanceKeyName
      IamInstanceProfile: !Ref Ec2IAMProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeType: "gp3"
            VolumeSize: "8"
            Encrypted: true
      SecurityGroupIds:
        - !Ref Ec2SecurityGroup
      #MetadataOptions:
      #  HttpTokens: "required" # Enforce IMDSv2
      #  HttpPutResponseHopLimit: 2 # Restrict token usage
      #  HttpEndpoint: "enabled"
      Monitoring: true  # Enable detailed CloudWatch monitoring
      SubnetId: !Ref VpcEc2Subnet
      UserData:
        Fn::Base64: |
          #!/bin/bash
          # Update system packages and apply security patches
          yum update -y --security
          # Configure IMDSv2 requirement
          TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")

          # Force IMDSv2 usage
          aws ec2 modify-instance-metadata-options \
            --instance-id $(curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/instance-id) \
            --http-tokens required \
            --http-endpoint enabled \
            --http-put-response-hop-limit 1 \
            --region $(curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/placement/region)

          # Install and configure Apache with security best practices
          yum install -y httpd
          # Configure Apache with secure settings
          echo "ServerTokens Prod" >> /etc/httpd/conf/httpd.conf
          echo "ServerSignature Off" >> /etc/httpd/conf/httpd.conf
          echo "TraceEnable Off" >> /etc/httpd/conf/httpd.conf
          # Start and enable Apache
          systemctl start httpd
          systemctl enable httpd
          # Create a simple index page
          echo "<h1>Hello from $(hostname -f)</h1>" > /var/www/html/index.html
          # Set proper permissions
          chown -R apache:apache /var/www/html
          chmod -R 755 /var/www/html
      Tags:
        - Key: Name
          Value: "dev-machine"
        - Key: Environment
          Value: "dev"

Outputs:

  EC2InstancePublicIp:
    Value: !GetAtt EC2Instance.PublicIp
