AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 - LaunchTemplate

Metadata:

  StackVersion: 1

  AWS::CloudFormation::Interface:

    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcSubnetId

      -
        Label:
          default: "Instance Configuration"
        Parameters:
          - ServerInstanceImageId
          - ServerInstanceType

Parameters:

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  VpcSubnetId:
    Description: EC2 subnet
    Type: AWS::EC2::Subnet::Id

  ServerInstanceImageId:
    Description: EC2 AMI ID
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    #Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

  ServerInstanceType:
    Description: EC2 InstanceType
    Type: String
    Default: t2.micro

Resources:

  ServerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
      Policies: !Ref 'AWS::NoValue'
      RoleName: !Ref 'AWS::NoValue'

  ServerInstanceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ServerInstanceRolePolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          Resource:
          - arn:aws:logs:*:*:*
      Roles:
      - !Ref 'ServerInstanceRole'

  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref ServerInstanceRole

  ServerInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: "Instance Serurity Group"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"

  ServerInstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      #LaunchTemplateName: ""
      #VersionDescription
      LaunchTemplateData:
        ImageId: !Ref ServerInstanceImageId
        InstanceType: !Ref ServerInstanceType
        IamInstanceProfile:
          Arn: !GetAtt ServerInstanceProfile.Arn
        #KeyName: !Ref ServerInstanceKeyName
        SecurityGroupIds:
          - !Ref ServerInstanceSecurityGroup
        InstanceInitiatedShutdownBehavior: terminate
        MetadataOptions:
          HttpEndpoint: enabled
          HttpPutResponseHopLimit: 1
          HttpTokens: required #IMDSv2 is required
          InstanceMetadataTags: disabled
        Monitoring:
          Enabled: false # true to enable detailed monitoring
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
            DeleteOnTermination: true
        UserData:
          Fn::Base64: |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: volume
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: !Ref 'AWS::StackName'

  ServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ServerInstanceLaunchTemplate
        Version: !GetAtt "ServerInstanceLaunchTemplate.LatestVersionNumber"
      SubnetId: !Ref VpcSubnetId

Outputs:

  ServerInstancePublicIp:
    Value: !GetAtt ServerInstance.PublicIp

  ServerInstanceLaunchTemplateLatestVersionNumber:
    Value: !GetAtt ServerInstanceLaunchTemplate.LatestVersionNumber