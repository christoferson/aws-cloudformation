AWSTemplateFormatVersion: "2010-09-09"
Description: EC2

Metadata:

  StackVersion: 1

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          Default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcSubnetCidr
          - StaticIPforSSH
      -
        Label:
          Default: "Instance Configuration"
        Parameters:
          - Ec2ImageId
          - Ec2InstanceType
          - Ec2InstanceKeyName

Parameters:

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  VpcSubnetCidr:
    Description: VPC subnet CIDR
    Type: String
    Default: 10.0.0.0/16

  StaticIPforSSH:
    Description: Static IP for SSH access
    Type: String
    Default: 127.0.0.1/32

  Ec2ImageId:
    Description: AMI ID
    Type: String
    Default: ami-01efa4023f0f3a042

  Ec2InstanceType:
    Description: EC2 InstanceType
    Type: String
    Default: t2.micro

  Ec2InstanceKeyName:
    Description: EC2 SSH KEY
    Type: AWS::EC2::KeyPair::KeyName
    Default: SSHKey

Resources:

  Ec2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies: !Ref 'AWS::NoValue'
      RoleName: !Ref 'AWS::NoValue'

  Ec2RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Ec2RolePolicies
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:List*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          Resource:
          - arn:aws:logs:*:*:*
      Roles:
      - !Ref 'Ec2IAMRole'

  Ec2IAMProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: Ec2IAMRole
    Properties:
      Path: /
      Roles:
      - !Ref 'Ec2IAMRole'


  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: allow ICMP via same VPC
      SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: !Ref 'VpcSubnetCidr'

  Ec2SecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: allow SSH via static IP
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'StaticIPforSSH'

  Ec2InstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref 'Ec2ImageId'
        InstanceType: !Ref 'Ec2InstanceType'
        IamInstanceProfile:
          Arn: !GetAtt 'Ec2IAMProfile.Arn'
        KeyName: !Ref 'Ec2InstanceKeyName'
        SecurityGroupIds:
        - !Ref 'Ec2SecurityGroup'
        - !Ref 'Ec2SecurityGroupSSH'
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: volume
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: !Ref 'AWS::StackName'
#        UserData:
#          Fn::Base64: |
#            #!/bin/bash -xe
#            date > /tmp/run.log
#            yum update -y
#            yum install jq awslogs -y
#            chkconfig awslogs on
#            service awslogs start
#            if [ ! -f /swapfile ]; then dd if=/dev/zero of=/swapfile bs=1M count=128; chmod 600 /swapfile; mkswap /swapfile; swapon /swapfile; echo "/swapfile  swap  swap  defaults  0  0" >> /etc/fstab; fi
        InstanceInitiatedShutdownBehavior: terminate
        Monitoring:
          Enabled: false
#        CreditSpecification:
#          CpuCredits: standard
#        InstanceMarketOptions:
#          SpotOptions:
#            SpotInstanceType: one-time
#            InstanceInterruptionBehavior: terminate
#          MarketType: spot
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
            DeleteOnTermination: true
#        - DeviceName: /dev/xvdf
#          Ebs:
#            VolumeSize: 1
#            VolumeType: gp2
#            DeleteOnTermination: true