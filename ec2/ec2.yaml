AWSTemplateFormatVersion: "2010-09-09"
Description: EC2

Metadata:

  StackVersion: 1

  AWS::CloudFormation::Interface:

    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcSubnetCidr
          - VpcEc2Subnet1
          - VpcEc2Subnet2
          - StaticIPforSSH
      -
        Label:
          default: "Instance Configuration"
        Parameters:
          - Ec2ImageId
          - Ec2InstanceType
          - Ec2InstanceKeyName
      -
        Label:
          default: "Auto Scaling Configuration"
        Parameters:
          - Ec2AutoscaleMinSize
          - Ec2AutoscaleMaxSize
          - Ec2AutoscaleDesiredCapacity

Parameters:

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  VpcSubnetCidr:
    Description: VPC subnet CIDR
    Type: String
    Default: 10.0.0.0/16

  VpcEc2Subnet1:
    Description: EC2 subnet 1(AZ-a)
    Type: AWS::EC2::Subnet::Id

  VpcEc2Subnet2:
    Description: EC2 subnet 2(AZ-c)
    Type: AWS::EC2::Subnet::Id

  StaticIPforSSH:
    Description: Static IP for SSH access
    Type: String
    Default: 127.0.0.1/32

  Ec2ImageId:
    Description: AMI ID
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  Ec2InstanceType:
    Description: EC2 InstanceType
    Type: String
    Default: t2.micro

  Ec2InstanceKeyName:
    Description: EC2 SSH KEY
    Type: AWS::EC2::KeyPair::KeyName
    Default: SSHKey

  Ec2AutoscaleMinSize:
    Description: AutoScalingGroup MinSize
    Type: String
    Default: '1'

  Ec2AutoscaleMaxSize:
    Description: AutoScalingGroup MaxSize
    Type: String
    Default: '1'

  Ec2AutoscaleDesiredCapacity:
    Description: AutoScalingGroup DesiredCapacity
    Type: String
    Default: '1'

Resources:

  Ec2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies: !Ref 'AWS::NoValue'
      RoleName: !Ref 'AWS::NoValue'

  Ec2RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Ec2RolePolicies
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:List*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          Resource:
          - arn:aws:logs:*:*:*
      Roles:
      - !Ref 'Ec2IAMRole'

  Ec2IAMProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: Ec2IAMRole
    Properties:
      Path: /
      Roles:
      - !Ref Ec2IAMRole


  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: allow ICMP via same VPC
      SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: !Ref 'VpcSubnetCidr'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"

  Ec2SecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: allow SSH via static IP
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'StaticIPforSSH'

  Ec2InstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref 'Ec2ImageId'
        InstanceType: !Ref 'Ec2InstanceType'
        IamInstanceProfile:
          Arn: !GetAtt 'Ec2IAMProfile.Arn'
        KeyName: !Ref 'Ec2InstanceKeyName'
        SecurityGroupIds:
        - !Ref 'Ec2SecurityGroup'
        - !Ref 'Ec2SecurityGroupSSH'
        InstanceInitiatedShutdownBehavior: terminate
        Monitoring:
          Enabled: false
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
            DeleteOnTermination: true
        UserData:
          Fn::Base64: |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>Hi from $(hostname -f)</h1>" > /var/www/html/index.html
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: volume
          Tags:
          - Key: Env
            Value: "dev"
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: !Ref 'AWS::StackName'

  Ec2InstanceAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - !Ref 'VpcEc2Subnet1'
      - !Ref 'VpcEc2Subnet2'
      LaunchTemplate:
        LaunchTemplateId: !Ref 'Ec2InstanceLaunchTemplate'
        Version: !GetAtt 'Ec2InstanceLaunchTemplate.LatestVersionNumber'
      MinSize: !Ref 'Ec2AutoscaleMinSize'
      MaxSize: !Ref 'Ec2AutoscaleMaxSize'
      DesiredCapacity: !Ref 'Ec2AutoscaleDesiredCapacity'

Outputs:

  EC2InstancePublicIp:
    Value: !GetAtt EC2Instance.PublicIp