AWSTemplateFormatVersion: "2010-09-09"
Description: "API Gateway - HTTP - Integrate with Existing Lambda Function"

Parameters:

  LambdaFunctionName:
    Description: Lambda Function Name
    Type: String
    Default: "my-lambda"

Resources:

  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Version: 1
      Name: demo-lambda-proxy
      Description: Lambda Proxy / Uses resource-based permissions
      ProtocolType: HTTP
      Tags:
        Environment: test
        Application: demo

  Integration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpApi
      Description: Lambda Integration
      ConnectionType: INTERNET # INTERNET |  VPC_LINK 
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'
      #TimeoutInMillis: 30000  # Custom timeout between 50 and 30,000 milliseconds

  RouteGetDemo:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'GET /demo'
      Target: !Join
        - /
        - - integrations
          - !Ref Integration

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      AutoDeploy: true
      StageName: 'stg'


  APIInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}"
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/stg/GET/demo

Outputs:

  InvokeURL:
    Value: !Sub https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com

  HttpApiEndpoint:
    Value: !GetAtt HttpApi.ApiEndpoint
