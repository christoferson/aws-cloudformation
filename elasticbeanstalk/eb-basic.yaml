AWSTemplateFormatVersion: '2010-09-09'


Metadata:

  AWS::CloudFormation::Interface:

    ParameterGroups:
      -
        Label:
          default: "Application Configuration"
        Parameters:
          - CodeBucketName
          - CodeObjectKey
      -
        Label:
          default: "Platform Configuration"
        Parameters:
          - PlatformVersion
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcSubnetListLoadBalancer
          - VpcSubnetListWebServer

Parameters:

  CodeBucketName:
    Type: String
    Default: demo-cloudformation
    Description: Bucket containing lambda code

  CodeObjectKey:
    Type: String
    Default: beanstalk/tomcat.zip
    Description: Object Key of the zipped code

  PlatformVersion:
    Type: String
    Default: 64bit Amazon Linux 2 v4.2.15 running Tomcat 8.5 Corretto 11
    Description: Platform Version

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  VpcSubnetListLoadBalancer:
    Description: Public VpcSubnets for Load Balancer
    Type: List<AWS::EC2::Subnet::Id>

  VpcSubnetListWebServer:
    Description: Private VpcSubnets for Web Servers
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  BeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: ElasticBeanstalk Sample Application

  BeanstalkApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        Ref: BeanstalkApplication
      Description: ElasticBeanstalk Sample Application Version
      SourceBundle:
        S3Bucket: !Ref CodeBucketName
        S3Key: !Ref CodeObjectKey

  BeanstalkConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: BeanstalkApplication
      Description: ElasticBeanstalk Sample Configuration Template
      SolutionStackName: !Ref PlatformVersion
      OptionSettings:
      - Namespace: aws:ec2:vpc
        OptionName: VPCId
        Value: !Ref VpcId
      - Namespace: aws:ec2:vpc
        OptionName: Subnets
        Value: !Join [',', !Ref VpcSubnetListWebServer]
      - Namespace: aws:ec2:vpc
        OptionName: ELBSubnets
        Value: !Join [',', !Ref VpcSubnetListLoadBalancer]
      - Namespace: aws:ec2:vpc
        OptionName: AssociatePublicIpAddress
        Value: false # Using Private Subnet
      - Namespace: aws:ec2:vpc
        OptionName: ELBScheme
        Value: public # Public Facing
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: '1'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '1'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: application  # classic | application | network
      - Namespace: aws:elasticbeanstalk:application
        OptionName: Application Healthcheck URL
        Value: /
      - Namespace: aws:elbv2:loadbalancer # LoadBalancerType=application
        OptionName: SecurityGroups
        Value: !Ref LoadBalancerSecurityGroup
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !Ref InstanceProfile
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SecurityGroups
        Value: !Ref InstanceSecurityGroup

      #- Namespace: aws:ec2:vpc
      #  OptionName: DBSubnets
      #  Value: LoadBalanced

  BeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: BeanstalkApplication
      Description: ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: BeanstalkConfigurationTemplate
      VersionLabel:
        Ref: BeanstalkApplicationVersion
      Tags: 
        - Key: "env"
          Value: "prd"

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Instance Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: "0.0.0.0/0"

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Load Balancer Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-load-balancer-sg"

  InstanceRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
      Tags:
        - Key: 'environment'
          Value: common

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref InstanceRole

Outputs:

  BeanstalkEnvironmentEndpointURL:
    Value: !GetAtt BeanstalkEnvironment.EndpointURL
