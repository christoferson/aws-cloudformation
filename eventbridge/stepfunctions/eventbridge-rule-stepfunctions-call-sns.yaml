AWSTemplateFormatVersion: "2010-09-09"
Description: EventBridge Rule (StepFunctions) - Call SNS

# Target SNS Topic must define AWS::SNS::TopicPolicy to permit events.amazonaws.com to publish message
# TODO: Check if we need AWS::SNS::TopicPolicy here. Assume source SNS has it.

Metadata:

  StackVersion: 1

  "AWS::CloudFormation::Interface":
    ParameterGroups:
      -
        Label:
          default: "Application Configuration"
        Parameters:
          - Application
          - Environment
      - Label: 
          default: "Source Configuration"
        Parameters: 
          - StateMachineArn
      - Label: 
          default: "Target Configuration"
        Parameters: 
          - SnsTopicArn
    ParameterLabels: 
      BucketArn: 
        Default: "StateMachineArn"
        MinLength: 5
        MaxLength: 124
        

Parameters:

  Application:
    Type: String
    Default: myapp
    Description: Application Name

  Environment:
    Type: String
    Default: dev
    Description: Environment

  StateMachineArn:
    Type: "String"
    Default: "arn:aws:states:us-west-1:30950454358:stateMachine:StateMachine-zPlfXPRHlJX5"
    Description: "Arn of the Target StateMachine"

  SnsTopicArn:
    Type: "String"
    Default: "arn:aws:sns:us-west-1:30950454358:my-topic"
    Description: "Arn of the Target Sns Topic"

Resources:

  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      #RoleName: !Sub "event-bridge-role"
      Description: !Sub "Event Bridge Role - StepFunctions Call SNS"
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      ManagedPolicyArns:
        - !Ref EventBridgeRolePolicy
        #- arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Tags:
        - Key: "Application"
          Value: !Ref Application      
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "name"
          Value: "event-bridge-role-stepfunction-call-sns"

  EventBridgeRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Event Bridge ManagedPolicy - StepFunction Call SNS"
      #ManagedPolicyName: "event-bridge-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'

  SnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SnsTopicArn
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "events.amazonaws.com"
            Action: 
              - "sns:Publish"
            Resource: !Ref SnsTopicArn

  EventBridgeRule: 
    Type: AWS::Events::Rule
    Properties: 
      #Name: eventbridge-rule-batch-call-sns
      Description: "Event Bridge Rule StepFunction Call SNS"
      EventBusName: default
      EventPattern:
        source:
          - aws.states
        detail-type:
          - "Step Functions Execution Status Change"
        detail:
          status: # RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED
            - "FAILED"
            - "SUCCEEDED"
            - "TIMED_OUT"
            - "ABORTED"
          stateMachineArn:
            - prefix: !Sub "${StateMachineArn}"
      State: "ENABLED"
      RoleArn: !GetAtt EventBridgeRole.Arn
      Targets:
        - 
          Arn: !Ref SnsTopicArn
          Id: "TargetSNS"
          #RoleArn : Not Supported. Use Resource Policy AWS::SNS::TopicPolicy
          InputTransformer:
            InputPathsMap:
              StateMachine: $.detail.stateMachineArn
              Execution: $.detail.executionArn
              Name: $.detail.name
              Status: $.detail.status
              StartDate: $.detail.startDate
              StopDate: $.detail.stopDate
              Time: $.time
            InputTemplate: |-
              {
                "Time": <Time>,
                "StartDate": <StartDate>,
                "StopDate": <StopDate>,
                "StateMachine": <StateMachine>,
                "Execution": <Execution>,
                "Name": <Name>,
                "Status": <Status>
              }
          RetryPolicy:
            MaximumEventAgeInSeconds: 3600 #86400
            MaximumRetryAttempts: 1 #185
          #DeadLetterConfig:
          #   Arn: xx

Outputs:

  EventBridgeRuleName:
    Value: !Ref EventBridgeRule
