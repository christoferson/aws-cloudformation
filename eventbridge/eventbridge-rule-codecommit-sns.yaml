
AWSTemplateFormatVersion: "2010-09-09"
Description: EventBridge Rule (CodeCommit) - Transform Output - Send to Lambda

Metadata:

  StackVersion: 1

Resources:

  EventBridgeCodeCommitSnsTopicOnPush:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "eventbridge-codecommit-sns-topic-on-push"
      DisplayName: "CodeCommit - OnPush"
      #DisplayName: "EventBridgeCodeCommitSnsTopicOnPush"
      #KmsMasterKeyId: alias/aws/sns
      #FifoTopic: false
      Tags:
        - Key: "management"
          Value: "manual"

  EventBridgeCodeCommitSnsTopicOnPrMerge:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "eventbridge-codecommit-sns-topic-on-prmerge"
      DisplayName: "CodeCommit - OnPullRequestMerge"
      #DisplayName: "EventBridgeCodeCommitSnsTopicOnPush"
      #KmsMasterKeyId: alias/aws/sns
      #FifoTopic: false
      Tags:
        - Key: "management"
          Value: "manual"

  EventBridgeRuleCodeCommitOnPush: 
    Type: AWS::Events::Rule
    Properties: 
      Name: eventbridge-rule-codecommit-on-push-sns
      Description: "CodeCommit OnPush Trigger"
      #EventBusName: default
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Repository State Change"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
            - staging
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:repository"
      State: "ENABLED"
      Targets:
        -
          Arn: !Ref EventBridgeCodeCommitSnsTopicOnPush
          Id: "TargetSnsTopic"
          InputTransformer: 
            InputPathsMap:
              "CallerUserArn" : "$.detail.callerUserArn"
              "ReferenceName" : "$.detail.referenceName"
              "RepositoryName" : "$.detail.repositoryName"
              "CommitId" : "$.detail.commitId"
            InputTemplate: |
              {
                "Message": "Code pushed by <CallerUserArn> on <RepositoryName>",
                "Repository": "<RepositoryName>",
                "Branch" : "<ReferenceName>",
                "User" : "<CallerUserArn>",
                "Commit": "<CommitId>"
              }

  EventBridgeRuleCodeCommitOnPrCreate: 
    Type: AWS::Events::Rule
    Properties: 
      Name: eventbridge-rule-codecommit-on-prcreate-sns
      Description: "CodeCommit Notification Trigger on Pull Request Create"
      #EventBusName: default
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Pull Request State Change"
        detail:
          event:
            - pullRequestCreated
          destinationReference:
            - refs/heads/main
          isMerged: 
            - "False"
          pullRequestStatus:
            - "Open"
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:repository"
      State: "ENABLED"
      Targets:
        - 
          Arn: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
          Id: "TargetSnsTopic"
          InputTransformer:
            InputPathsMap:
              "Author" : "$.detail.author"
              "CallerUserArn" : "$.detail.callerUserArn"
              "Title" : "$.detail.title"
              "Description" : "$.detail.description"
              "RepositoryName" : "$.detail.repositoryNames[0]"
              "DestinationReference" : "$.detail.destinationReference"
              "NotificationBody" : "$.detail.notificationBody"
              "PullRequestId" : "$.detail.pullRequestId"
            InputTemplate: |
              {
                "Message": "PR Create by <CallerUserArn> on <DestinationReference>",
                "Repository" : "<RepositoryName>",
                "DestinationBranch" : "<DestinationReference>",
                "Author" : "<Author>",
                "User" : "<CallerUserArn>",
                "Title" : "<Title>",
                "Description" : "<Description>",
                "PullRequest" : "<PullRequestId>",
                "Details" : "<NotificationBody>"
              }

  EventBridgeRuleCodeCommitOnPrModified: 
    Type: AWS::Events::Rule
    Properties: 
      Name: eventbridge-rule-codecommit-on-prmodified-sns
      Description: "CodeCommit Notification Trigger on Pull Request Modified"
      #EventBusName: default
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Pull Request State Change"
        detail:
          event:
            - pullRequestStatusChanged
          destinationReference:
            - refs/heads/main
          isMerged: 
            - "False"
          pullRequestStatus:
            - "Open"
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:repository"
      State: "ENABLED"
      Targets:
        - 
          Arn: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
          Id: "TargetSnsTopic"
          InputTransformer:
            InputPathsMap:
              "Author" : "$.detail.author"
              "CallerUserArn" : "$.detail.callerUserArn"
              "Title" : "$.detail.title"
              "Description" : "$.detail.description"
              "RepositoryName" : "$.detail.repositoryNames[0]"
              "DestinationReference" : "$.detail.destinationReference"
              "NotificationBody" : "$.detail.notificationBody"
              "PullRequestId" : "$.detail.pullRequestId"
            InputTemplate: |
              {
                "Message": "PR Modified by <CallerUserArn> on <DestinationReference>",
                "Repository" : "<RepositoryName>",
                "DestinationBranch" : "<DestinationReference>",
                "Author" : "<Author>",
                "User" : "<CallerUserArn>",
                "Title" : "<Title>",
                "Description" : "<Description>",
                "PullRequest" : "<PullRequestId>",
                "Details" : "<NotificationBody>"
              }

  EventBridgeRuleCodeCommitOnPrMerge: 
    Type: AWS::Events::Rule
    Properties: 
      Name: eventbridge-rule-codecommit-on-prmerge-sns
      Description: "CodeCommit Notification Trigger on Pull Request Merge"
      #EventBusName: default
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Pull Request State Change"
        detail:
          event:
            - pullRequestMergeStatusUpdated
          destinationReference:
            - refs/heads/main
          isMerged: 
            - "True"
          pullRequestStatus:
            - "Closed"
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:repository"
      State: "ENABLED"
      Targets:
        - 
          Arn: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
          Id: "TargetSnsTopic"
          InputTransformer:
            InputPathsMap:
              "Author" : "$.detail.author"
              "CallerUserArn" : "$.detail.callerUserArn"
              "Title" : "$.detail.title"
              "Description" : "$.detail.description"
              "RepositoryName" : "$.detail.repositoryNames[0]"
              "DestinationReference" : "$.detail.destinationReference"
              "NotificationBody" : "$.detail.notificationBody"
              "PullRequestId" : "$.detail.pullRequestId"
            InputTemplate: |
              {
                "Message": "PR Merge by <CallerUserArn> on <DestinationReference>",
                "Repository" : "<RepositoryName>",
                "DestinationBranch" : "<DestinationReference>",
                "Author" : "<Author>",
                "User" : "<CallerUserArn>",
                "Title" : "<Title>",
                "Description" : "<Description>",
                "PullRequest" : "<PullRequestId>",
                "Details" : "<NotificationBody>"
              }

  InvokeSnsTopicPermissionCodeCommitOnPush:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref EventBridgeCodeCommitSnsTopicOnPush
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            #Resource: '*'
            Resource: !Ref EventBridgeCodeCommitSnsTopicOnPush

  InvokeSnsTopicPermissionCodeCommitOnPrCreate:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            #Resource: '*'
            Resource: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge

  InvokeSnsTopicPermissionCodeCommitOnPrModified:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            #Resource: '*'
            Resource: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge

  InvokeSnsTopicPermissionCodeCommitOnPrMerge:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            #Resource: '*'
            Resource: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge

Outputs:
  EventBridgeCodeCommitSnsTopicOnPushArn:
    Value: !Ref EventBridgeCodeCommitSnsTopicOnPush
  EventBridgeCodeCommitSnsTopicOnPrMergeArn:
    Value: !Ref EventBridgeCodeCommitSnsTopicOnPrMerge
  EventBridgeRuleCodeCommitOnPushArn:
    Value: !GetAtt EventBridgeRuleCodeCommitOnPush.Arn
  EventBridgeRuleCodeCommitOnPrCreateArn:
    Value: !GetAtt EventBridgeRuleCodeCommitOnPrCreate.Arn
  EventBridgeRuleCodeCommitOnPrMergeArn:
    Value: !GetAtt EventBridgeRuleCodeCommitOnPrMerge.Arn
