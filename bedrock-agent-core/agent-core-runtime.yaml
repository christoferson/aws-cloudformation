AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Bedrock AgentCore Runtime with Correct Syntax'

Parameters:
  AgentRuntimeName:
    Type: String
    Default: 'MyAgentRuntime'
    Description: 'Name of the AgentCore Runtime'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_]{0,47}'

  RuntimeDescription:
    Type: String
    Default: 'AgentCore Runtime for hosting AI agents'
    Description: 'Description of the runtime'
    MaxLength: 1200

  ContainerImageUri:
    Type: String
    Description: 'ECR Container Image URI (e.g., 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-agent:latest)'
    AllowedPattern: '^\d{12}\.dkr\.ecr\.([a-z0-9-]+)\.amazonaws\.com/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)([:@]\S+)$'

  ProtocolType:
    Type: String
    Default: 'HTTP'
    AllowedValues:
      - 'HTTP'
      - 'MCP'
    Description: 'Protocol configuration for the runtime'

  NetworkMode:
    Type: String
    Default: 'VPC'
    AllowedValues:
      - 'PUBLIC'
      - 'VPC'
    Description: 'Network mode for the runtime'

  VpcSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Subnet IDs for VPC mode (1-16 subnets)'

  VpcSecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: 'Security Group IDs for VPC mode (1-16 groups)'

Resources:
  # IAM Role for AgentCore Runtime
  AgentRuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AgentRuntimeName}-RuntimeRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - bedrock.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'aws:SourceAccount': !Ref 'AWS::AccountId'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Policies:
        - PolicyName: AgentRuntimePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/bedrock/agentcore/*'
              - Effect: Allow
                Action:
                  - 'bedrock:InvokeModel'
                  - 'bedrock:InvokeModelWithResponseStream'
                Resource: !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/*'
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                Resource: '*'

  # CloudWatch Log Group
  RuntimeLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/bedrock/agentcore/${AgentRuntimeName}'
      RetentionInDays: 7

  # Bedrock AgentCore Runtime with Correct Syntax
  AgentCoreRuntime:
    Type: AWS::BedrockAgentCore::Runtime
    Properties:
      AgentRuntimeName: !Ref AgentRuntimeName
      Description: !Ref RuntimeDescription
      RoleArn: !GetAtt AgentRuntimeRole.Arn
      ProtocolConfiguration: !Ref ProtocolType

      # Agent Runtime Artifact with Container Configuration
      AgentRuntimeArtifact:
        ContainerConfiguration:
          ContainerUri: !Ref ContainerImageUri

      # Network Configuration with Correct Structure
      NetworkConfiguration:
        NetworkMode: !Ref NetworkMode
        NetworkModeConfig:
          Subnets: !Ref VpcSubnetIds
          SecurityGroups: !Ref VpcSecurityGroupIds

      # Environment Variables
      EnvironmentVariables:
        RUNTIME_ENV: production
        AWS_ACCOUNT_ID: !Ref 'AWS::AccountId'
        LOG_GROUP: !Ref RuntimeLogGroup
        AWS_REGION: !Ref 'AWS::Region'

      # Authorizer Configuration
      AuthorizerConfiguration:
        AuthorizerType: IAM

      # Tags
      Tags:
        Environment: Production
        ManagedBy: CloudFormation
        Application: BedrockAgentCore

  # Runtime Endpoint
  AgentRuntimeEndpoint:
    Type: AWS::BedrockAgentCore::RuntimeEndpoint
    Properties:
      Name: !Sub '${AgentRuntimeName}-endpoint'
      AgentRuntimeId: !Ref AgentCoreRuntime
      Description: 'Production endpoint for AgentCore Runtime'
      Tags:
        Environment: Production
        EndpointType: Primary

Outputs:
  AgentRuntimeId:
    Description: 'AgentCore Runtime ID'
    Value: !Ref AgentCoreRuntime
    Export:
      Name: !Sub '${AWS::StackName}-RuntimeId'

  AgentRuntimeArn:
    Description: 'AgentCore Runtime ARN'
    Value: !GetAtt AgentCoreRuntime.AgentRuntimeArn
    Export:
      Name: !Sub '${AWS::StackName}-RuntimeArn'

  AgentRuntimeVersion:
    Description: 'AgentCore Runtime Version'
    Value: !GetAtt AgentCoreRuntime.AgentRuntimeVersion
    Export:
      Name: !Sub '${AWS::StackName}-RuntimeVersion'

  AgentRuntimeStatus:
    Description: 'AgentCore Runtime Status'
    Value: !GetAtt AgentCoreRuntime.Status
    Export:
      Name: !Sub '${AWS::StackName}-RuntimeStatus'

  RuntimeEndpointId:
    Description: 'Runtime Endpoint ID'
    Value: !GetAtt AgentRuntimeEndpoint.Id
    Export:
      Name: !Sub '${AWS::StackName}-EndpointId'

  RuntimeEndpointArn:
    Description: 'Runtime Endpoint ARN'
    Value: !GetAtt AgentRuntimeEndpoint.AgentRuntimeEndpointArn
    Export:
      Name: !Sub '${AWS::StackName}-EndpointArn'

  RuntimeEndpointStatus:
    Description: 'Runtime Endpoint Status'
    Value: !GetAtt AgentRuntimeEndpoint.Status

  RuntimeEndpointLiveVersion:
    Description: 'Runtime Endpoint Live Version'
    Value: !GetAtt AgentRuntimeEndpoint.LiveVersion

  CreatedAt:
    Description: 'Runtime Creation Time'
    Value: !GetAtt AgentCoreRuntime.CreatedAt

  LastUpdatedAt:
    Description: 'Runtime Last Update Time'
    Value: !GetAtt AgentCoreRuntime.LastUpdatedAt

  RuntimeRoleArn:
    Description: 'IAM Role ARN for the Runtime'
    Value: !GetAtt AgentRuntimeRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-RoleArn'

  LogGroupName:
    Description: 'CloudWatch Log Group Name'
    Value: !Ref RuntimeLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-LogGroup'