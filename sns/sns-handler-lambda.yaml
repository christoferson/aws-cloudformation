
AWSTemplateFormatVersion: "2010-09-09"
Description: SNS Notification - Trigger Lambda

Metadata:

  StackVersion: 1

Resources:

  FunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "sns-handler-lambda-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName : "sns-handler-lambda-function"
      Description: "SNS Lambda Notification Handler"
      Runtime: nodejs12.x
      Role: !GetAtt FunctionExecutionRole.Arn
      Handler: index.handler
      Environment:
        Variables:
          databaseName: lambdadb
          databaseUser: admin
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              console.log(event);
              if (event.type == 'error') { throw new Error('Authentication Failed'); }
              //console.log('Type: ' + event['detail-type']);
              //console.log('Time: ' + event.time);
              const response = {
                  statusCode: 200,
                  body: JSON.stringify('Hi from the ' + event.routeKey + ' route!'),
              };
              return response;
          };

  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "sns-handler-lambda-topic"

  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt LambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref SNSTopic

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "sns.amazonaws.com"
      SourceArn: !Ref SNSTopic

Outputs:
  LambdaFunctionArn:
    Value: !GetAtt LambdaFunction.Arn
  FunctionExecutionRoleArn:
    Value: !GetAtt FunctionExecutionRole.Arn
  SNSTopicArn:
    Value: !Ref SNSTopic
