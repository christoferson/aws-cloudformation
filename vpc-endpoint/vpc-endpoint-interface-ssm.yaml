AWSTemplateFormatVersion: "2010-09-09"
Description: |
  VPC Interface Endpoints for AWS Systems Manager (SSM) - Educational Template

  This template creates VPC Interface Endpoints for AWS Systems Manager, enabling secure
  instance management and Session Manager connectivity without internet access.

  WHAT IS AWS SYSTEMS MANAGER (SSM)?
  AWS Systems Manager is a collection of capabilities for configuring and managing your
  Amazon EC2 instances, on-premises servers, and virtual machines. It provides a unified
  interface for operational tasks across your AWS resources.

  SSM SERVICE COMPONENTS:

  1. üîß SSM (Core Service):
     - Parameter Store operations
     - Systems Manager Agent (SSM Agent) communication
     - Patch Manager and Maintenance Windows
     - Run Command and Automation

  2. üí¨ SSM Messages:
     - Session Manager secure shell access
     - Interactive terminal sessions
     - Port forwarding capabilities
     - Secure data channel communication

  3. üì° EC2 Messages:
     - SSM Agent to Systems Manager service communication
     - Instance registration and heartbeat
     - Command execution and response handling
     - Agent updates and configuration

  WHY USE VPC ENDPOINTS FOR SSM?

  üîí ENHANCED SECURITY:
  - No internet gateway or NAT gateway required
  - All SSM traffic stays within AWS private network
  - Secure shell access without SSH keys or bastion hosts
  - Enhanced compliance for regulated workloads

  üöÄ IMPROVED RELIABILITY:
  - Direct connection to AWS backbone
  - Reduced latency for management operations
  - Higher availability for critical operations
  - No dependency on internet connectivity

  üí∞ COST OPTIMIZATION:
  - Eliminates NAT Gateway charges for SSM traffic
  - No bastion host infrastructure costs
  - Reduced operational overhead

# Reference: https://docs.aws.amazon.com/systems-manager/latest/userguide/setup-create-vpc.html

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Application Configuration"
        Parameters:
          - Application
          - Environment
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcSubnetList

Parameters:
  Application:
    Type: String
    Default: lab
    Description: Application Name

  Environment:
    Type: String
    Default: dev
    Description: Environment

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: |
      The VPC where SSM Interface Endpoints will be created.

      VPC REQUIREMENTS FOR SSM:
      - Must have DNS resolution enabled (enableDnsSupport: true)
      - Must have DNS hostnames enabled (enableDnsHostnames: true)
      - Should contain EC2 instances that need SSM management

  VpcSubnetList:
    Type: List<AWS::EC2::Subnet::Id>
    Description: |
      Private subnets where SSM Interface Endpoint ENIs will be created.

      RECOMMENDED:
      - Private subnets for enhanced security
      - Subnets in multiple AZs for high availability
      - Subnets where managed EC2 instances are located

Resources:
  #############################################################
  # SSM CORE SERVICE ENDPOINT
  #############################################################

  VpcEndpointSSM:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: Interface

      # SSM CORE SERVICE:
      # The main endpoint for Systems Manager service operations
      # Required for: Parameter Store, Run Command, Patch Manager, Automation
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssm"

      VpcId: !Ref VpcId
      SubnetIds: !Ref VpcSubnetList

      # PRIVATE DNS:
      # Enables private DNS resolution for ssm.region.amazonaws.com
      PrivateDnsEnabled: true

      Tags:
        - Key: Name
          Value: !Sub "${Application}-${Environment}-ssm-endpoint"
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: "SSM Core"

  #############################################################
  # SSM MESSAGES ENDPOINT (SESSION MANAGER)
  #############################################################

  VpcEndpointSSMMessages:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: Interface

      # SSM MESSAGES SERVICE:
      # Required for Session Manager secure shell access
      # Enables interactive terminal sessions and port forwarding
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssmmessages"

      VpcId: !Ref VpcId
      SubnetIds: !Ref VpcSubnetList
      PrivateDnsEnabled: true

      Tags:
        - Key: Name
          Value: !Sub "${Application}-${Environment}-ssm-messages-endpoint"
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: "SSM Messages (Session Manager)"

  #############################################################
  # EC2 MESSAGES ENDPOINT (SSM AGENT COMMUNICATION)
  #############################################################

  VpcEndpointEc2Messages:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: Interface

      # EC2 MESSAGES SERVICE:
      # Used by SSM Agent to communicate with Systems Manager service
      # Required for agent registration, heartbeat, and command execution
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ec2messages"

      VpcId: !Ref VpcId
      SubnetIds: !Ref VpcSubnetList
      PrivateDnsEnabled: true

      Tags:
        - Key: Name
          Value: !Sub "${Application}-${Environment}-ec2-messages-endpoint"
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: "EC2 Messages (SSM Agent)"

Outputs:
  VpcEndpointSSMId:
    Description: |
      VPC Endpoint ID for SSM Core Service.

      USE CASES:
      - Parameter Store operations
      - Run Command execution
      - Patch Manager operations
      - Systems Manager Automation
    Value: !Ref VpcEndpointSSM

  VpcEndpointSSMMessagesId:
    Description: |
      VPC Endpoint ID for SSM Messages (Session Manager).

      USE CASES:
      - Session Manager shell access
      - Interactive terminal sessions
      - Port forwarding through Session Manager
      - Secure data channel communication
    Value: !Ref VpcEndpointSSMMessages

  VpcEndpointEc2MessagesId:
    Description: |
      VPC Endpoint ID for EC2 Messages (SSM Agent).

      USE CASES:
      - SSM Agent registration and heartbeat
      - Command execution and response handling
      - Agent updates and configuration
      - Instance inventory collection
    Value: !Ref VpcEndpointEc2Messages

  SSMUsageExamples:
    Description: |
      Systems Manager usage examples through VPC endpoints.
    Value: !Sub |
      SSM USAGE EXAMPLES:

      üñ•Ô∏è SESSION MANAGER COMMANDS:

      # Start interactive session
      aws ssm start-session --target i-1234567890abcdef0 --region ${AWS::Region}

      # Port forwarding through Session Manager
      aws ssm start-session \
          --target i-1234567890abcdef0 \
          --document-name AWS-StartPortForwardingSession \
          --parameters '{"portNumber":["80"],"localPortNumber":["8080"]}' \
          --region ${AWS::Region}

      # Port forwarding to RDS through EC2 instance
      aws ssm start-session \
          --target i-1234567890abcdef0 \
          --document-name AWS-StartPortForwardingSessionToRemoteHost \
          --parameters '{"host":["mydb.cluster-xyz.us-east-1.rds.amazonaws.com"],"portNumber":["3306"],"localPortNumber":["3306"]}' \
          --region ${AWS::Region}

      üìã PARAMETER STORE OPERATIONS:

      # Store a parameter
      aws ssm put-parameter \
          --name "/${Application}/${Environment}/database/password" \
          --value "MySecretPassword" \
          --type "SecureString" \
          --region ${AWS::Region}

      # Retrieve a parameter
      aws ssm get-parameter \
          --name "/${Application}/${Environment}/database/password" \
          --with-decryption \
          --region ${AWS::Region}

      # Get multiple parameters by path
      aws ssm get-parameters-by-path \
          --path "/${Application}/${Environment}/" \
          --recursive \
          --region ${AWS::Region}

      üöÄ RUN COMMAND OPERATIONS:

      # Run shell command on instances
      aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=["echo Hello World","uptime"]' \
          --targets "Key=tag:Environment,Values=${Environment}" \
          --region ${AWS::Region}

      # Install packages using Run Command
      aws ssm send-command \
          --document-name "AWS-ConfigureAWSPackage" \
          --parameters 'action=["Install"],name=["AmazonCloudWatchAgent"]' \
          --targets "Key=instanceids,Values=i-1234567890abcdef0" \
          --region ${AWS::Region}

      üîß PATCH MANAGER OPERATIONS:

      # Create patch baseline
      aws ssm create-patch-baseline \
          --name "${Application}-${Environment}-patch-baseline" \
          --operating-system "AMAZON_LINUX_2" \
          --approval-rules 'PatchRules=[{PatchFilterGroup={PatchFilters=[{Key=CLASSIFICATION,Values=[Security,Bugfix]}]},ApproveAfterDays=7}]' \
          --region ${AWS::Region}

      # Get instance patch compliance
      aws ssm describe-instance-patch-states \
          --instance-ids i-1234567890abcdef0 \
          --region ${AWS::Region}

  TroubleshootingGuide:
    Description: |
      Common SSM VPC endpoint troubleshooting steps.
    Value: !Sub |
      üîç SSM VPC ENDPOINT TROUBLESHOOTING:

      ‚ùå Issue: "SSM Agent not connecting"
      ‚úÖ Solutions:
      1. Verify all three endpoints are created and healthy
      2. Check EC2 instance has SSM IAM role attached
      3. Verify security groups allow HTTPS (443) outbound
      4. Check SSM Agent is installed and running: sudo systemctl status amazon-ssm-agent

      ‚ùå Issue: "Session Manager connection fails"
      ‚úÖ Solutions:
      1. Ensure SSM Messages endpoint is created
      2. Verify instance is registered: aws ssm describe-instance-information
      3. Check IAM permissions for Session Manager
      4. Test connectivity: aws ssm start-session --target INSTANCE-ID

      ‚ùå Issue: "Parameter Store access denied"
      ‚úÖ Solutions:
      1. Check IAM permissions for SSM parameters
      2. Verify parameter exists and correct path
      3. Ensure KMS permissions for SecureString parameters
      4. Test with: aws ssm get-parameter --name PARAMETER-NAME

      ‚ùå Issue: "Run Command not working"
      ‚úÖ Solutions:
      1. Verify EC2 Messages endpoint is healthy
      2. Check instance is online in SSM console
      3. Verify command document exists and permissions
      4. Check command execution history for errors

      üõ†Ô∏è DIAGNOSTIC COMMANDS:

      # Check endpoint status
      aws ec2 describe-vpc-endpoints --vpc-endpoint-ids ${VpcEndpointSSM} ${VpcEndpointSSMMessages} ${VpcEndpointEc2Messages}

      # Verify instance SSM connectivity
      aws ssm describe-instance-information --region ${AWS::Region}

      # Test DNS resolution (from EC2 instance)
      nslookup ssm.${AWS::Region}.amazonaws.com
      nslookup ssmmessages.${AWS::Region}.amazonaws.com
      nslookup ec2messages.${AWS::Region}.amazonaws.com

      # Check SSM Agent logs (on EC2 instance)
      sudo tail -f /var/log/amazon/ssm/amazon-ssm-agent.log

  RequiredIAMPermissions:
    Description: |
      Required IAM permissions for SSM functionality.
    Value: |
      üìã REQUIRED IAM PERMISSIONS:

      üîß EC2 INSTANCE ROLE (AmazonSSMManagedInstanceCore):

      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "ssm:UpdateInstanceInformation",
                      "ssmmessages:CreateControlChannel",
                      "ssmmessages:CreateDataChannel",
                      "ssmmessages:OpenControlChannel",
                      "ssmmessages:OpenDataChannel",
                      "ec2messages:AcknowledgeMessage",
                      "ec2messages:DeleteMessage",
                      "ec2messages:FailMessage",
                      "ec2messages:GetEndpoint",
                      "ec2messages:GetMessages",
                      "ec2messages:SendReply"
                  ],
                  "Resource": "*"
              }
          ]
      }

      üë§ USER/ROLE FOR SESSION MANAGER ACCESS:

      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "ssm:StartSession"
                  ],
                  "Resource": [
                      "arn:aws:ec2:*:*:instance/*"
                  ],
                  "Condition": {
                      "StringLike": {
                          "ssm:resourceTag/Environment": ["dev", "staging", "prod"]
                      }
                  }
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "ssm:TerminateSession",
                      "ssm:ResumeSession"
                  ],
                  "Resource": [
                      "arn:aws:ssm:*:*:session/${aws:username}-*"
                  ]
              }
          ]
      }

      üìä PARAMETER STORE PERMISSIONS:

      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "ssm:GetParameter",
                      "ssm:GetParameters",
                      "ssm:GetParametersByPath"
                  ],
                  "Resource": [
                      "arn:aws:ssm:*:*:parameter/myapp/*"
                  ]
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "kms:Decrypt"
                  ],
                  "Resource": [
                      "arn:aws:kms:*:*:key/key-id"
                  ]
              }
          ]
      }

  CostOptimization:
    Description: |
      Cost optimization strategies for SSM VPC endpoints.
    Value: !Sub |
      üí∞ SSM VPC ENDPOINT COSTS:

      INTERFACE ENDPOINT COSTS (3 SSM endpoints):
      - Base: 3 √ó $0.01/hour √ó 24 √ó 30 = $21.60/month
      - Per AZ: Each subnet adds $0.01/hour per endpoint
      - Data processing: $0.01 per GB processed

      COST COMPARISON:
      - Bastion host (t3.micro): ~$8.50/month + operational overhead
      - NAT Gateway: $32.40/month + $0.045/GB data processing
      - SSM VPC Endpoints: More cost-effective for management traffic

      COST OPTIMIZATION STRATEGIES:

      1. ENDPOINT OPTIMIZATION:
         - Deploy endpoints only in required AZs
         - Use single AZ for development environments
         - Monitor endpoint usage patterns

      2. SESSION MANAGER OPTIMIZATION:
         - Use Session Manager instead of bastion hosts
         - Implement session timeout policies
         - Monitor and audit session usage

      3. PARAMETER STORE OPTIMIZATION:
         - Use parameter hierarchies efficiently
         - Implement caching for frequently accessed parameters
         - Regular cleanup of unused parameters

      4. AUTOMATION OPTIMIZATION:
         - Use Systems Manager Automation for repetitive tasks
         - Implement efficient patch management schedules
         - Optimize Run Command usage patterns