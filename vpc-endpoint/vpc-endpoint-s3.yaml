AWSTemplateFormatVersion: '2010-09-09'
Description: |
  VPC Gateway Endpoint for Amazon S3 - Educational Template

  This template creates a VPC Gateway Endpoint for Amazon S3, enabling private
  connectivity to S3 without routing traffic over the internet.

  WHAT IS AN S3 VPC GATEWAY ENDPOINT?
  An S3 VPC Gateway Endpoint enables you to privately connect your VPC to Amazon S3
  without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect.

  GATEWAY vs INTERFACE ENDPOINTS:

  Gateway Endpoint (This Template):
  ‚úÖ Free of charge
  ‚úÖ High performance
  ‚úÖ Automatic route table integration
  ‚úÖ Supports all S3 operations
  ‚ùå VPC-only access (no on-premises)
  ‚ùå Same-region only

  Interface Endpoint (Alternative):
  ‚úÖ Works with on-premises via VPN/Direct Connect
  ‚úÖ Cross-region support
  ‚úÖ DNS-based access
  ‚ùå Hourly charges apply
  ‚ùå More complex setup

  HOW IT WORKS:
  - AWS automatically adds routes to your specified route tables
  - Routes direct S3 traffic through the VPC endpoint instead of internet
  - Uses prefix lists (pl-xxxxxxxx) in route tables
  - No additional infrastructure to maintain

  WHY USE S3 GATEWAY ENDPOINT?

  üîí ENHANCED SECURITY:
  - Traffic stays within AWS private network
  - No exposure to internet-based attacks
  - Enhanced compliance posture
  - Private IP addressing within your VPC

  üöÄ IMPROVED PERFORMANCE:
  - Lower latency (direct AWS backbone connectivity)
  - Higher throughput and reliability
  - Reduced network hops
  - Consistent performance characteristics

  üí∞ COST OPTIMIZATION:
  - Gateway endpoints are completely free
  - Eliminates NAT Gateway charges for S3 traffic
  - No cross-AZ data transfer charges for S3 operations
  - Significant savings for high-volume S3 workloads

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Application Configuration"
        Parameters:
          - Application
          - Environment
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - RouteTableIdList

Parameters:
  Application:
    Type: String
    Default: lab
    Description: Application Name

  Environment:
    Type: String
    Default: dev
    Description: Environment

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: |
      The VPC where the S3 Gateway Endpoint will be created.

      VPC REQUIREMENTS:
      - Must contain the route tables you want to associate
      - Should contain EC2 instances that need S3 access
      - Endpoint only accessible from within this VPC

  RouteTableIdList:
    Type: CommaDelimitedList
    Description: |
      Comma-separated list of Route Table IDs to associate with the S3 endpoint.

      ROUTE TABLE SELECTION STRATEGY:
      ‚úÖ INCLUDE: Private subnet route tables, Database subnet route tables
      ‚ùå AVOID: Public subnet route tables (unless specifically needed)

      WHAT HAPPENS: AWS automatically adds routes for S3 IP prefixes to these
      route tables, directing S3 traffic through the VPC endpoint.

      EXAMPLE: rtb-1234567890abcdef0,rtb-0987654321fedcba0
    Default: "rtb-xxxxx,rtb-yyy"

Resources:
  #############################################################
  # S3 VPC GATEWAY ENDPOINT
  #############################################################

  VpcEndpointS3:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      # ENDPOINT TYPE:
      # Gateway: Uses route table entries, free, high performance
      VpcEndpointType: Gateway

      # S3 SERVICE NAME:
      # Format: com.amazonaws.{region}.s3
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'

      # Target VPC for the endpoint
      VpcId: !Ref VpcId

      # VPC ENDPOINT POLICY:
      # Controls what S3 actions can be performed through this endpoint
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowS3ObjectOperations
            Effect: Allow
            Principal: '*'
            Action:
              # Object-level operations (most common use case)
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
              - "s3:GetObjectVersion"
              - "s3:PutObjectAcl"
              - "s3:GetObjectAcl"
              # Bucket-level operations for listing
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
            Resource:
              # Bucket-level operations
              - "arn:aws:s3:::*"
              # Object-level operations  
              - "arn:aws:s3:::*/*"

      # ROUTE TABLE ASSOCIATIONS:
      # These route tables will get automatic S3 prefix list routes added
      RouteTableIds: !Ref RouteTableIdList

      Tags:
        - Key: Name
          Value: !Sub "${Application}-${Environment}-s3-gateway-endpoint"
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: "S3"
        - Key: EndpointType
          Value: Gateway

Outputs:
  VpcEndpointId:
    Description: |
      The VPC Endpoint ID for the S3 Gateway Endpoint.

      USE CASES:
      - Reference in other CloudFormation templates
      - Monitoring and logging configurations
      - Troubleshooting connectivity issues

      FORMAT: vpce-xxxxxxxxxxxxxxxxx
    Value: !Ref VpcEndpointS3

  S3UsageExamples:
    Description: |
      S3 usage examples through the VPC Gateway Endpoint.
    Value: !Sub |
      S3 USAGE EXAMPLES:

      üêç PYTHON BOTO3 EXAMPLES:

      import boto3

      # S3 client will automatically use VPC endpoint
      s3 = boto3.client('s3', region_name='${AWS::Region}')

      # List buckets
      buckets = s3.list_buckets()
      for bucket in buckets['Buckets']:
          print(f"Bucket: {bucket['Name']}")

      # Upload file to S3
      s3.upload_file(
          'local-file.txt', 
          'my-bucket', 
          'remote-file.txt'
      )

      # Download file from S3
      s3.download_file(
          'my-bucket', 
          'remote-file.txt', 
          'downloaded-file.txt'
      )

      # List objects in bucket
      response = s3.list_objects_v2(Bucket='my-bucket')
      for obj in response.get('Contents', []):
          print(f"Object: {obj['Key']}")

      üñ•Ô∏è AWS CLI EXAMPLES:

      # List buckets
      aws s3 ls --region ${AWS::Region}

      # List objects in bucket
      aws s3 ls s3://my-bucket --region ${AWS::Region}

      # Upload file
      aws s3 cp local-file.txt s3://my-bucket/ --region ${AWS::Region}

      # Download file
      aws s3 cp s3://my-bucket/remote-file.txt . --region ${AWS::Region}

      # Sync directory to S3
      aws s3 sync ./local-directory s3://my-bucket/prefix/ --region ${AWS::Region}

      # Copy between S3 buckets
      aws s3 cp s3://source-bucket/file.txt s3://dest-bucket/ --region ${AWS::Region}

      üîß CURL EXAMPLES (with AWS Signature):

      # Get object (requires AWS signature)
      curl -H "Authorization: AWS4-HMAC-SHA256 ..." \
           https://my-bucket.s3.${AWS::Region}.amazonaws.com/my-object.txt

      # Note: Traffic will route through VPC endpoint automatically

  TroubleshootingGuide:
    Description: |
      Common S3 Gateway Endpoint troubleshooting steps.
    Value: !Sub |
      üîç S3 GATEWAY ENDPOINT TROUBLESHOOTING:

      ‚ùå Issue: "Unable to access S3"
      ‚úÖ Solutions:
      1. Verify route tables have S3 prefix list routes:
         aws ec2 describe-route-tables --route-table-ids ${RouteTableIdList}
      2. Check for routes with destination starting with 'pl-' (prefix list)
      3. Ensure EC2 instances are in subnets associated with these route tables
      4. Verify security groups allow HTTPS (443) outbound

      ‚ùå Issue: "S3 requests still going through NAT Gateway"
      ‚úÖ Solutions:
      1. Verify correct route tables are associated with endpoint
      2. Check route precedence (more specific routes win)
      3. Confirm S3 requests use correct region
      4. Review VPC Flow Logs for traffic patterns

      ‚ùå Issue: "Access Denied" errors
      ‚úÖ Solutions:
      1. Check IAM permissions for S3 actions
      2. Review S3 bucket policies
      3. Verify endpoint policy allows required actions
      4. Confirm bucket exists in same region (${AWS::Region})

      ‚ùå Issue: "DNS resolution fails"
      ‚úÖ Solutions:
      1. Verify VPC DNS resolution is enabled
      2. Check VPC DNS hostnames setting
      3. Test DNS: nslookup s3.${AWS::Region}.amazonaws.com
      4. Ensure using correct S3 endpoint format

      üõ†Ô∏è DIAGNOSTIC COMMANDS:

      # Check route tables for S3 routes
      aws ec2 describe-route-tables --route-table-ids ${RouteTableIdList} \
          --query 'RouteTables[].Routes[?GatewayId==`${VpcEndpointS3}`]'

      # Verify endpoint status  
      aws ec2 describe-vpc-endpoints --vpc-endpoint-ids ${VpcEndpointS3}

      # Test S3 connectivity
      aws s3 ls --region ${AWS::Region} --debug

      # Check VPC Flow Logs for S3 traffic patterns
      # Look for traffic to S3 IP ranges in flow logs

  SecurityBestPractices:
    Description: |
      Security best practices for S3 Gateway Endpoint.
    Value: !Sub |
      üîí S3 GATEWAY ENDPOINT SECURITY:

      üõ°Ô∏è ENDPOINT POLICY SECURITY:

      1. PRINCIPLE OF LEAST PRIVILEGE:
         - Current policy allows common S3 operations
         - Consider restricting to specific buckets in production
         - Limit actions to only what's needed
         - Regular policy reviews and audits

      2. PRODUCTION POLICY EXAMPLE:
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                      "s3:GetObject",
                      "s3:PutObject"
                  ],
                  "Resource": [
                      "arn:aws:s3:::my-app-bucket/*",
                      "arn:aws:s3:::my-logs-bucket/*"
                  ],
                  "Condition": {
                      "StringEquals": {
                          "aws:PrincipalAccount": "${AWS::AccountId}"
                      }
                  }
              }
          ]
      }

      üîê S3 BUCKET SECURITY:

      1. BUCKET POLICY WITH VPC ENDPOINT:
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Deny",
                  "Principal": "*",
                  "Action": "s3:*",
                  "Resource": [
                      "arn:aws:s3:::my-bucket",
                      "arn:aws:s3:::my-bucket/*"
                  ],
                  "Condition": {
                      "StringNotEquals": {
                          "aws:SourceVpce": "${VpcEndpointS3}"
                      }
                  }
              }
          ]
      }

      2. ADDITIONAL SECURITY CONDITIONS:
         - Require SSL/TLS: "aws:SecureTransport": "true"
         - IP address restrictions: "aws:SourceIp"
         - Time-based access: "DateGreaterThan", "DateLessThan"
         - MFA requirements: "aws:MultiFactorAuthPresent"

      üìä MONITORING AND AUDITING:

      1. CLOUDTRAIL LOGGING:
         - Enable CloudTrail for all S3 API calls
         - Monitor access patterns and unusual activities
         - Set up alerts for sensitive operations
         - Regular log analysis and review

      2. VPC FLOW LOGS:
         - Monitor network traffic patterns
         - Verify traffic uses VPC endpoint
         - Detect anomalous access patterns
         - Compliance and forensic analysis

  CostOptimization:
    Description: |
      Cost optimization benefits of S3 Gateway Endpoint.
    Value: !Sub |
      üí∞ S3 GATEWAY ENDPOINT COST BENEFITS:

      GATEWAY ENDPOINT COSTS:
      - Endpoint usage: $0.00 (completely free!)
      - Data processing: $0.00 (no charges)
      - Maintenance: $0.00 (fully managed by AWS)

      COST SAVINGS COMPARISON:

      NAT GATEWAY APPROACH (without VPC endpoint):
      - NAT Gateway: $32.40/month (single AZ)
      - Data processing: $0.045/GB
      - Example: 1TB S3 traffic = $45/month in data processing
      - Total: ~$77/month for 1TB S3 traffic

      GATEWAY ENDPOINT APPROACH:
      - All S3 traffic: $0.00
      - Monthly savings: $77/month for 1TB workload
      - Annual savings: $924/year for 1TB workload

      COST OPTIMIZATION STRATEGIES:

      1. MAXIMIZE S3 TRAFFIC THROUGH ENDPOINT:
         - Route all S3 operations through VPC endpoint
         - Include backup and logging traffic
         - Consider S3 Transfer Acceleration for cross-region
         - Use S3 Intelligent Tiering for storage optimization

      2. ROUTE TABLE OPTIMIZATION:
         - Associate all relevant private subnet route tables
         - Ensure database backup traffic uses endpoint
         - Include application logging subnets
         - Regular audit of route table associations

      3. MONITORING COST SAVINGS:
         - Monitor NAT Gateway data processing metrics
         - Track S3 traffic volumes through CloudWatch
         - Calculate actual savings from endpoint usage
         - Regular cost optimization reviews

      EXAMPLE SAVINGS CALCULATION:
      - Before: 500GB/month S3 traffic via NAT = $22.50/month
      - After: Same traffic via Gateway Endpoint = $0.00/month  
      - Monthly savings: $22.50
      - Annual savings: $270