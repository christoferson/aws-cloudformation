AWSTemplateFormatVersion: "2010-09-09"
Description: Batch

Parameters:

  VpcId:
    Description : "VPC ID"
    Type: AWS::EC2::VPC::Id

  ComputeSubnetId1:
    Description : "Compute Subnet 1"
    Type : AWS::EC2::Subnet::Id

  ComputeSubnetId2:
    Description : "Compute Subnet 2"
    Type : AWS::EC2::Subnet::Id

Resources:


  BatchServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      #RoleName: !Sub ""
      Description: "Batch Service Role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: batch.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
        - !Ref BatchServiceRolePolicy
      Path: "/" #/
      Tags:
        - Key: 'environment'
          Value: common

  BatchServiceRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: "Batch Service Role ManagedPolicy"
      #ManagedPolicyName: "code-build-demo-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:GetObjectVersion'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::code-build-demo-bucket/*"

  BatchComputeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: BatchComputeEnvironment

  BatchComputeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: "/"

  BatchComputeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref BatchComputeInstanceRole

  BatchComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties:
      Type: MANAGED
      ServiceRole: !GetAtt BatchServiceRole.Arn 
      #ComputeEnvironmentName: cfn-env
      ComputeResources:
        MaxvCpus: 8
        MinvCpus: 0
        DesiredvCpus: 0
        SecurityGroupIds:
          - !Ref BatchComputeSecurityGroup
        Type: EC2
        Subnets:
          - !Ref ComputeSubnetId1
          - !Ref ComputeSubnetId2
        InstanceRole: !GetAtt BatchComputeInstanceProfile.Arn
        InstanceTypes:
          - optimal
        Tags: {"Name": "Batch Compute Environment"}
      State: ENABLED

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BatchComputeEnvironment
      State: ENABLED # f the job queue state is DISABLED, new jobs can't be added to the queue, but jobs already in the queue can finish.
      Priority: 1 # Job queues with a higher priority (or a higher integer value for the priority parameter) are evaluated first
      #JobQueueName: cfn-queue
      Tags: {"Name": "Batch Job Queue"}


  BatchJobRole:
    Type: 'AWS::IAM::Role'
    Properties:
      #RoleName: !Sub "code-build-demo-role"
      Description: !Sub "Batch Job Role"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - !Ref BatchJobRolePolicy
      Path: /
      Tags:
        - Key: 'environment'
          Value: common

  BatchJobRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: "Batch Role ManagedPolicy"
      #ManagedPolicyName: "code-build-demo-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'eks:Describe*'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ecr:GetAuthorizationToken'
            Effect: Allow
            Resource: '*'
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:GetObjectVersion'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::code-build-demo-bucket/*"
          - Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:PutImage'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:UploadLayerPart'
              - 'ecr:CompleteLayerUpload'
            Effect: Allow
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/code-image-repository-demo"
          - Action:
              - 'ecr:BatchGetImage'
              - 'ecr:GetDownloadUrlForLayer'
            Effect: Allow
            Resource: 
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/code-image-repository-cmn/*"

  BatchJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container # container | multinode
      #JobDefinitionName: cfn-def
      ContainerProperties:
        Command:
          - echo hi
        Memory: 500
        Privileged: true
        ReadonlyRootFilesystem: false
        JobRoleArn: !GetAtt BatchJobRole.Arn
        Vcpus: 1
        Image: busybox
      RetryStrategy:
        Attempts: 1
      Timeout:
        AttemptDurationSeconds: 60 #minimum value for the timeout is 60 seconds.

Outputs:

  BatchServiceRoleArn:
    Value: !Ref BatchServiceRole
