AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline


Parameters:

  CodePipelineBucketName: #Todo Provision S3 here
    Description: CodePipeline Bucket
    Type: String
    Default: "my-bucket"

  CodeCommitRepositoryName: #Todo Add Branch Name
    Description: CodeCommit Repository Name
    Type: String
    Default: "my-repository"

Resources:

  CodePipelineBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      #BucketName: !Ref BucketName
      AccessControl: "Private"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        IgnorePublicAcls: True
        BlockPublicPolicy: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
         Status: Suspended
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      Tags:
        - Key: "environment"
          Value: "dev"

  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      #RoleName: !Sub "code-build-demo-role"
      Description: !Sub "CodeBuild Role"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      ManagedPolicyArns:
        - !Ref CodeBuildRolePolicy
      Path: /
      Tags:
        - Key: 'environment'
          Value: common

  CodeBuildRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: "CodeBuild Role ManagedPolicy"
      #ManagedPolicyName: "code-build-demo-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'eks:Describe*'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ecr:GetAuthorizationToken'
            Effect: Allow
            Resource: '*'
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:GetObjectVersion'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::code-build-demo-bucket/*"
          - Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:PutImage'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:UploadLayerPart'
              - 'ecr:CompleteLayerUpload'
            Effect: Allow
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/code-image-repository-demo"
          - Action:
              - 'ecr:BatchGetImage'
              - 'ecr:GetDownloadUrlForLayer'
            Effect: Allow
            Resource: 
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/code-image-repository-cmn/*"

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      #RoleName: !Sub "code-codedeploy-demo-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "CodePipeline Role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${CodePipelineBucketName}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGet*
                  - codebuild:Get*
                  - codebuild:List*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:ListBranches
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                  - iam:PassRole
              - Resource: "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                Effect: Allow
                Action:
                  - ssm:PutParameter

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      #Name: myProjectName
      Description: Project Description
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        #Location: !Sub "${CodeBuildOutputBucket}"
        #Path: /output
        #Name: build.zip
        #NamespaceType: BUILD_ID # NONE | BUILD_ID
        #Packaging: ZIP # NONE | ZIP
        #OverrideArtifactName: true #Use Name in buildspec.yaml. Otherwise use Name'build.zip' defined here.
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        #Image: aws/codebuild/java:openjdk-8
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
        - Name: varName
          Type: PLAINTEXT # PLAINTEXT PARAMETER_STORE SECRETS_MANAGER
          Value: varValue
      Source: #buildspec.yaml in zip file
        Type: CODEPIPELINE # BITBUCKET | CODECOMMIT | CODEPIPELINE | GITHUB | GITHUB_ENTERPRISE | NO_SOURCE | S3
        #Location: !Sub "${CodeCommitRepository.CloneUrlHttp}"
      TimeoutInMinutes: 10
      Tags:
        - Key: Key1
          Value: Value1
        - Key: Key2
          Value: Value2

  CodeDeployAplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      #ApplicationName: "code-codedeploy-demo"
      ComputePlatform: Server #ComputePlatform: Server
      Tags:
        - Key: environment
          Value: stg

  CodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployAplication
      #DeploymentGroupName: "code-codedeploy-demo-deployment-group"
      DeploymentConfigName: CodeDeployDefault.OneAtATime
#      Deployment: 
#        Description: "My Deployment"
#        IgnoreApplicationStopFailures: true 
#        Revision: 
#          RevisionType: S3 
#          S3Location: 
#            Bucket: 
#              Ref: RevisionBucketName 
#            Key: 
#              Ref: RevisionObjectKey 
#            BundleType: Zip 
            #ETag: 
              #Ref: ETag 
            #Version: 
              #Ref: Version  
      Ec2TagFilters:
        - Type: KEY_AND_VALUE
          Key: "Environment"
          Value: "Development"
        - Type: KEY_AND_VALUE
          Key: "Name"
          Value: "Webserver"
      ServiceRoleArn: !GetAtt [CodeDeployServiceRole, Arn]
      #AutoRollbackConfiguration:
      #  Enabled: true
      #  Events: # DEPLOYMENT_FAILURE, DEPLOYMENT_STOP_ON_ALARM, or DEPLOYMENT_STOP_ON_REQUEST
      #    - DEPLOYMENT_FAILURE 
      #    - DEPLOYMENT_STOP_ON_ALARM

  CodePipelinePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !Ref CodeCommitRepositoryName
                BranchName: main
              RunOrder: 1
              OutputArtifacts:
                - Name: App
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: MyApp
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref CodeDeployAplication
                DeploymentGroupName: !Ref CodeDeployGroup
              RunOrder: 1
              InputArtifacts:
                - Name: MyApp

## Trigger CodePipeline on Push


  EventBridgeCodePipelineTriggerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Trigger CodeBuild"
      #ManagedPolicyName:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelinePipeline}" #TODO #Resource: !Sub "${CodePipelinePipeline.Arn}"

  EventBridgeCodePipelineTriggerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      #RoleName:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      Description: "EventBridgeCodePipelineTriggerRole"
      ManagedPolicyArns:
        - !Ref EventBridgeCodePipelineTriggerPolicy
      Tags:
        - Key: 'environment'
          Value: common
        - Key: owner
          Value: xxx


  EventBridgeRuleCodeCommitOnPush: 
    Type: AWS::Events::Rule
    Properties: 
      #Name: eventbridge-rule-codecommit-on-push-sns
      Description: "CodeCommit OnPush Trigger"
      #EventBusName: default
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Repository State Change"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
            - staging
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepositoryName}" #TODO
          # - !Sub "${CodeCommitRepository.Arn}" 
          # arn:aws:codecommit:eu-west-1:916902469227:code-repository-981
      State: "ENABLED"
      Targets:
        -
          #Arn: !GetAtt CodePipelinePipeline.Arn
          Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelinePipeline}" #TODO
          Id: "TriggerCodePipeline"
          RoleArn: !GetAtt EventBridgeCodePipelineTriggerRole.Arn
#
Outputs:

  CodeBuildRoleArn:
    Value: !Ref CodeBuildRole