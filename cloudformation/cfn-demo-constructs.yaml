AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template

Mappings: 

  RegionMap: 
    us-east-1: 
      "HVM64": "ami-0ff8a91507f77f867"
    us-west-1: 
      "HVM64": "ami-0bdb828fd58c52235"
    eu-west-1: 
      "HVM64": "ami-047bb4163c506cd98"
    ap-southeast-1: 
      "HVM64": "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      "HVM64": "ami-06cd52961ce9f0d85"

  RegionEnvironmentTypeAmiMap: 
    eu-east-1: 
      dev: "ami-8ff710e2"
      prd: "ami-f5f41398"
    eu-west-1: 
      dev: "ami-eff1028f"
      prd: "ami-d0f506b0"
            
Parameters:

  EnvironmentType: 
    Description: The environment type
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prd
    ConstraintDescription: must be a dev or prd
      
  InstanceTypeParameter:
    Description: Instance Type. Default is t2.micro.  
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    ConstraintDescription: must be t2.micro, m1.small, m1.large
    
  BucketName: 
    Description: (Optional) Bucket Name
    Type: String
    
Conditions:

  IsProduction: !Equals 
    - !Ref EnvironmentType
    - prd

  CreateBucket: !Not 
    - !Equals 
      - !Ref BucketName
      - ''

  CreateBucketPolicy: !And 
    - !Condition IsProduction
    - !Condition CreateBucket
    
Resources:

  ResourceExample:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Example Resource Role"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com      
      Path: /
      Tags:
        - Key: "DynamicSsmLatest"
          Value: !Sub "{{resolve:ssm:/demo/database/name}}"
        - Key: "DynamicSsmVersion"
          Value: !Sub "{{resolve:ssm:/demo/database/name:1}}"
        - Key: "MappingsValue"
          Value: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]

  Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateBucket

Outputs:

  ResourceExampleRef:
    Value: !Ref ResourceExample

  RegionEnvironmentTypeAmiMapResult: 
    Description: Return the name of the AMI ID that matches the region and environment type keys
    Value: !FindInMap [RegionEnvironmentTypeAmiMap, !Ref "AWS::Region", !Ref EnvironmentType]
  

