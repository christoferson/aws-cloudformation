AWSTemplateFormatVersion: '2010-09-09'
Description: ImageBuilder

Parameters:

#  VpcId:
#    Description: VPC ID
#    Type: AWS::EC2::VPC::Id

  VpcSubnet:
    Description: VpcSubnet
    Type: AWS::EC2::Subnet::Id

Resources:

  Ec2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder

  Ec2RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Ec2RolePolicies
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:List*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - '*'
      Roles:
      - !Ref 'Ec2IAMRole'

  Ec2IAMProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: Ec2IAMRole
    Properties:
      Path: /
      Roles:
        - !Ref 'Ec2IAMRole'

  BuildComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub '${AWS::StackName}-build'
      Platform: Linux
      Version: 1.0.0
      Data: |
        name: yum_install
        description: jq_install
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: UpdateOS
                action: UpdateOS
              - name: yum_update
                action: ExecuteBash
                inputs:
                  commands:
                    - yum update -y
              - name: jq_install
                action: ExecuteBash
                inputs:
                  commands:
                    - yum install jq -y
              - name: kernelng_install
                action: ExecuteBash
                inputs:
                  commands:
                    - amazon-linux-extras install -y kernel-ng
          - name: validate
            steps:
              - name: jq_install
                action: ExecuteBash
                inputs:
                  commands:
                    - rpm -qi jq

  TestComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub '${AWS::StackName}-test'
      Platform: Linux
      Version: 1.0.0
      Data: |
        name: jq_test
        description: jq_test
        schemaVersion: 1.0
        phases:
          - name: test
            steps:
              - name: check_status
                action: ExecuteBash
                inputs:
                  commands:
                    - jq --version


  ImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Name: !Sub '${AWS::StackName}-recipe'
      Version: 1.0.0
      ParentImage: !Sub 'arn:aws:imagebuilder:${AWS::Region}:aws:image/amazon-linux-2-x86/2020.4.7'
      Components:
        - ComponentArn: !Ref 'BuildComponent'
        - ComponentArn: !Ref 'TestComponent'

  InfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Name: !Sub '${AWS::StackName}-InfrastructureConfiguration'
      InstanceProfileName: !Ref 'Ec2IAMProfile'
      InstanceTypes:
        #- t3.small
        - t2.micro
      SubnetId: !Ref VpcSubnet
      SecurityGroupIds: []
      TerminateInstanceOnFailure: true

  DistributionConfiguration:
    Type: 'AWS::ImageBuilder::DistributionConfiguration'
    Properties:
      Name: !Sub '${AWS::StackName}-distribution'
      Description: !Sub '${AWS::StackName}-distribution'
      Distributions:
        - Region: 'eu-west-1'
          AmiDistributionConfiguration:
            Name: 'ami-dist-config-name-1 {{ imagebuilder:buildDate }}'
            Description: 'Region.'
            AmiTags:
              AmiTagKey: 'ami-tag-key'


#TODO Distribution Settings
# TODO Image or Image Pipeline