AWSTemplateFormatVersion: "2010-09-09"
Description: Bedrock - Roles

Metadata:

  AWS::CloudFormation::Interface:

    ParameterGroups:
      -
        Label:
          default: "Application Configuration"
        Parameters:
          - Application
          - Environment

Parameters:

  Application:
    Type: String
    Default: myapp
    Description: Application Name

  Environment:
    Type: String
    Default: dev
    Description: Environment

Resources:

  # AmazonBedrockExecutionRoleForAgents

  BedrockAgentRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "AmazonBedrockExecutionRoleForAgents_007"
      Description: "AmazonBedrockExecutionRoleForAgents"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "bedrock.amazonaws.com"
            Action:
              - "sts:AssumeRole"
            #Condition:
            #  StringEquals:
            #    "aws:SourceAccount": !Sub "${AWS::AccountId}"
            #  ArnLike:
            #    "AWS:SourceArn": !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*"
      Path: /
      ManagedPolicyArns:
        - !Ref BedrockAgentRolePolicy
      Tags:
        - Key: "Application"
          Value: !Ref Application
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "Name"
          Value: !Sub "${Application}-${Environment}-bedrock-svc-role-agents"

  BedrockAgentRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "BedrockAgent Role ManagedPolicy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Effect: Allow
            Resource: "*"
          - Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:GetObjectVersion"
            Effect: Allow
            Resource: "*"
          #- Action:
          #    - "bedrock:*"
          #  Effect: Allow
          #  Resource: "*"
          - Action: # Permissions to access your action group Lambda functions
              - "lambda:InvokeFunction"
            Effect: Allow
            Resource: "*" # "arn:aws:lambda:region:account-id:function:function-name"
            #Condition:
            #  StringEquals:
            #    "AWS:SourceAccount": !Sub "${AWS::AccountId}"
            #  ArnLike:
            #    "AWS:SourceArn": !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/agent-id"
          - Action: # (Optional) Permissions to access your knowledge bases
              - "bedrock:Retrieve"
              - "bedrock:RetrieveAndGenerate"
            Effect: Allow
            Resource: "*" # "arn:aws:bedrock:*:account-id:knowledge-base/knowledge-base-id"
          - Action: # Permissions to access Amazon Bedrock models
              - "bedrock:InvokeModel"
            Effect: Allow
            Resource:
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-v2"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-v2:1"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-instant-v1"

  # AmazonBedrockExecutionRoleForKnowledgeBase

  BedrockKnowledgeBaseRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "AmazonBedrockExecutionRoleForKnowledgeBase_007"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "bedrock.amazonaws.com"
            Action:
              - "sts:AssumeRole"
            #Condition:
            #  StringEquals:
            #    "aws:SourceAccount": !Sub "${AWS::AccountId}"
            #  ArnLike:
            #    "AWS:SourceArn": !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/*"
      Path: /
      ManagedPolicyArns:
        - !Ref BedrockKnowledgeBaseRolePolicy

  BedrockKnowledgeBaseRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Bedrock KnowledgeBase Role ManagedPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Effect: Allow
            Resource: "*"
          - Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:GetObjectVersion"
            Effect: Allow
            Resource: "*"
          - Action:
              - "bedrock:ListFoundationModels"
              - "bedrock:ListCustomModels"
            Effect: Allow
            Resource: "*"
          - Action: # Permissions to access Amazon Bedrock models
              - "bedrock:InvokeModel"
            Effect: Allow
            Resource:
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/amazon.titan-embed-text-v1"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/cohere.embed-english-v3"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/cohere.embed-multilingual-v3"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-v2"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-v2:1"
              - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-instant-v1"
          - Action: # (Optional) Permissions to access your vector database in Amazon OpenSearch Service
              - "aoss:APIAccessAll"
            Effect: Allow
            Resource: "*"
            #  - !Sub "arn:aws:aoss:${AWS::Region}:${AWS::AccountId}:collection/collection-id?"
          - Action: # (Optional) Permissions to access your Amazon Aurora database cluster
              - "rds:DescribeDBClusters"
            Effect: Allow
            Resource: "*"
          - Action: # (Optional) Permissions to access your Amazon Aurora database cluster
              - "rds:DescribeDBClusters"
            Effect: Allow
            Resource: "*" # "arn:aws:rds:region:account-id:cluster:db-cluster-id"
          - Action: # (Optional) Permissions to access your Amazon Aurora database cluster
              - "rds-data:BatchExecuteStatement"
              - "rds-data:ExecuteStatement"
            Effect: Allow
            Resource: "*" # "arn:aws:rds:region:account-id:cluster:db-cluster-id"
          - Action: # (Optional) Permissions to access a vector database configured with an AWS Secrets Manager secret
              - "secretsmanager:GetSecretValue"
            Effect: Allow
            Resource: "*" # "arn:aws:secretsmanager:region:account-id:secret:secret-id"
          - Action: # (Optional) Permissions for AWS to manage a AWS KMS key for transient data storage during data ingestion
              - "kms:GenerateDataKey"
              - "kms:Decrypt"
            Effect: Allow
            Resource: "*" # "arn:aws:kms:region:account-id:key/key-id"

  # AmazonBedrockExecutionRoleForModelCustomization

  BedrockModelCustomizationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "AmazonBedrockExecutionRoleForModelCustomization_007"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "bedrock.amazonaws.com"
            Action:
              - "sts:AssumeRole"
            #Condition:
            #  StringEquals:
            #    "aws:SourceAccount": !Sub "${AWS::AccountId}"
            #  ArnLike:
            #    "AWS:SourceArn": !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:model-customization-job/*"
      Path: /
      ManagedPolicyArns:
        - !Ref BedrockModelCustomizationRolePolicy

  BedrockModelCustomizationRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Bedrock Model Customization Role ManagedPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Effect: Allow
            Resource: "*"
          - Action: # Permissions to access training and validation files and to write output files in S3
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:GetObjectVersion"
              - "s3:ListBucket"
            Effect: Allow
            Resource: "*"

Outputs:

  BedrockAgentRoleArn:
    Value: !GetAtt BedrockAgentRole.Arn