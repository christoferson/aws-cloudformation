AWSTemplateFormatVersion: "2010-09-09"
Description: Lambda Basic with Zip Source in S3 - NodeJS

Parameters:

  CodeBucketName:
    Type: String
    Default: demo-cloudformation
    Description: Bucket containing lambda code

  CodeObjectKey:
    Type: String
    Default: lambda/basic-lambda-zip-java-0.1.zip
    Description: Object Key of the zipped code

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      #RoleName: "basic-lambda-zip-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - !Ref LambdaExecutionRolePolicy

  LambdaExecutionRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: "LambdaExecutionRolePolicy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'rds:*'
            Effect: Allow
            Resource: "*"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      #FunctionName : "basic-lambda-zip"
      Description: "Basic Lambda Zip File in S3"
      Runtime: java11
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: com.demo.lambda.RequestFunctionHandler
      Environment:
        Variables:
          databaseName: lambdadb
          databaseUser: admin
      Timeout: 15 #The default is 3 seconds. The maximum allowed value is 900 seconds.
      Code:
        S3Bucket: !Ref CodeBucketName
        S3Key: !Ref CodeObjectKey
        #S3ObjectVersion: 1
      TracingConfig:
        Mode: "Active"

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
      RetentionInDays: 1

Outputs:

  LambdaFunctionArn:
    Value: !GetAtt LambdaFunction.Arn

  LambdaExecutionRoleArn:
    Value: !GetAtt LambdaExecutionRole.Arn


